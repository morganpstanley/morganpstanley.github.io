{"version":3,"sources":["containers/Menu.js","containers/About.js","containers/Portfolio.js","containers/Resume.js","containers/Blog.js","containers/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","id","src","process","alt","to","Component","About","Portfolio","Resume","href","Blog","Contact","state","email","link","this","App","defaultSize","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ubAoCeA,E,uKA5BP,OACA,0BAAMC,UAAU,QACR,yBAAKC,GAAG,QACJ,yBAAKA,GAAG,YAAYC,IAAKC,gDAAiDC,IAAI,UAEtF,yBAAKJ,UAAU,OAAOC,GAAG,cACrB,kBAAC,IAAD,CAAMI,GAAG,KAAT,SAEJ,yBAAKL,UAAU,OAAOC,GAAG,kBACrB,kBAAC,IAAD,CAAMI,GAAG,cAAT,cAEJ,yBAAKL,UAAU,OAAOC,GAAG,eACrB,kBAAC,IAAD,CAAMI,GAAG,WAAT,WAEJ,yBAAKL,UAAU,OAAOC,GAAG,aACrB,kBAAC,IAAD,CAAMI,GAAG,SAAT,SAEJ,yBAAKL,UAAU,OAAOC,GAAG,gBACrB,kBAAC,IAAD,CAAMI,GAAG,YAAT,YAEJ,yBAAKJ,GAAG,eAAR,e,GAxBOK,aCcJC,G,6KAXP,OACI,yBAAKP,UAAU,cACX,wBAAIA,UAAU,eAAd,sBACA,uBAAGA,UAAU,aAAb,gC,GAPIM,cCoBLE,G,6KAhBP,OACI,yBAAKR,UAAU,kBACX,wBAAIA,UAAU,eAAd,aACA,yBAAKC,GAAG,uBACJ,yBAAKD,UAAU,kBACX,yBAAKC,GAAG,UAAUC,IAAKC,gDAAiDC,IAAI,+BAEhF,yBAAKJ,UAAU,kBACf,yBAAKC,GAAG,UAAUC,IAAKC,wCAAyCC,IAAI,qC,GAZhEE,cCeTG,G,6KAXP,OACI,yBAAKT,UAAU,eACX,wBAAIA,UAAU,eAAd,YACA,uBAAGA,UAAU,aACT,uBAAGC,GAAG,gBAAgBS,KAAK,mIAA3B,uC,GARCJ,cCeNK,G,6KAXP,OACI,yBAAKX,UAAU,aACX,wBAAIA,UAAU,eAAd,UACA,2GACwB,uBAAGC,GAAG,YAAYS,KAAK,sCAAvB,e,GARrBJ,cCwBJM,G,kNAtBXC,MAAQ,CACJC,MAAO,2BACPC,KAAM,mC,EAGVD,MAAQ,WACJ,OAAO,EAAKD,MAAMC,O,uDAKlB,OACI,yBAAKd,UAAU,gBACX,wBAAIA,UAAU,eAAd,aACA,uBAAGA,UAAU,aAAb,6DAC8D,uBAAGU,KAAMM,KAAKH,MAAME,MAAOC,KAAKH,MAAMC,MAAtC,W,GAjBxDR,c,qBC2BPW,MAnBf,WACE,OACE,yBAAKjB,UAAU,OACX,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWkB,YAAa,KACpB,kBAAC,EAAD,MACF,yBAAKjB,GAAG,QACN,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,kBAAC,IAAD,CAAOa,KAAK,aAAaC,UAAWb,IACpC,kBAAC,IAAD,CAAOY,KAAK,UAAUC,UAAWZ,IACjC,kBAAC,IAAD,CAAOW,KAAK,QAAQC,UAAWV,IAC/B,kBAAC,IAAD,CAAOS,KAAK,WAAWC,UAAWT,SCV5BU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.49ac4881.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './Menu.css'\nimport {Link} from \"react-router-dom\";\n\nclass Menu extends Component {\n\n\n    render() {\n        return(\n        <menu className=\"menu\">\n                <div id=\"logo\">\n                    <img id=\"signature\" src={process.env.PUBLIC_URL + '/white-signature.png'} alt=\"logo\"></img>\n                </div>\n            <div className=\"link\" id=\"menu-about\">\n                <Link to=\"/\">Home</Link>\n            </div>\n            <div className=\"link\" id=\"menu-portfolio\">\n                <Link to=\"/portfolio\">Portfolio</Link>\n            </div>\n            <div className=\"link\" id=\"menu-resume\">\n                <Link to=\"/resume\">Resume</Link>\n            </div>\n            <div className=\"link\" id=\"menu-blog\">\n                <Link to=\"/blog\">Blog</Link>\n            </div>\n            <div className=\"link\" id=\"menu-contact\">\n                <Link to=\"/contact\">Contact</Link>\n            </div>\n            <div id=\"menu-symbol\">\n                âœ¤\n            </div>\n        </menu>\n        )\n    }\n}\n\nexport default Menu","import React, { Component } from 'react'\nimport './About.css'\n\nclass About extends Component {\n\n\n    render() {\n        return(\n            <div className=\"about-page\">\n                <h1 className=\"page-header\" >Under Construction</h1>\n                <p className=\"page-text\">\n                    Please check back soon!\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default About","import React, { Component } from 'react'\nimport './Portfolio.css'\n\nclass Portfolio extends Component {\n\n\n    render() {\n        return(\n            <div className=\"portfolio-page\">\n                <h1 className=\"page-header\">Portfolio</h1>\n                <div id=\"portfolio-page-body\">\n                    <div className=\"portfolio-item\">\n                        <img id=\"stocker\" src={process.env.PUBLIC_URL + '/stocker-sign-up.png'} alt=\"Stocker Portfolio Website\"></img>\n                    </div>\n                    <div className=\"portfolio-item\">\n                    <img id=\"prolift\" src={process.env.PUBLIC_URL + '/prolift.png'} alt=\"Prolift Portfolio Website\"></img>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Portfolio","import React, { Component } from 'react'\nimport './Resume.css'\n\nclass Resume extends Component {\n\n\n    render() {\n        return(\n            <div className=\"resume-page\">\n                <h1 className=\"page-header\" > Resume </h1>\n                <p className=\"page-text\">\n                    <a id=\"linkto-resume\" href=\"https://docs.google.com/document/d/e/2PACX-1vRz0REkDGRXf_f5P_VgXC_jD8hGxeFZWm10WVxKCrY_C0qh7iZbQhim0cIslSFvV3mfAzqrGdsq2ZET/pub\">Click here to view my resume.</a>\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default Resume","import React, { Component } from 'react'\nimport './Blog.css'\n\nclass Blog extends Component {\n\n\n    render() {\n        return(\n            <div className=\"blog-page\">\n                <h1 className=\"page-header\" > Blog </h1>\n                <p>At some point I may move all my blog posts to this site.\n                    Until then, read it <a id=\"blog-link\" href=\"https://medium.com/@morganpstanley\">here.</a>\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default Blog","import React, { Component } from 'react'\nimport './Contact.css'\n\nclass Contact extends Component {\n\n    state = {\n        email: \"morganpstanley@gmail.com\",\n        link: \"mailto:morganpstanley@gmail.com\"\n    }\n\n    email = () => {\n        return this.state.email\n    }\n\n\n    render() {\n        return(\n            <div className=\"contact-page\">\n                <h1 className=\"page-header\" > Contact </h1>\n                <p className=\"page-text\">\n                    If you'd like to contact me, please feel free to email at <a href={this.state.link}>{this.state.email} </a>\n                </p>\n            </div>\n        )\n    }\n}\n\nexport default Contact","import React from 'react';\nimport Menu from './containers/Menu'\nimport About from './containers/About'\nimport Portfolio from './containers/Portfolio'\nimport Resume from './containers/Resume'\nimport Blog from './containers/Blog'\nimport Contact from './containers/Contact'\nimport SplitPane from 'react-split-pane'\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n          <SplitPane defaultSize={150}>\n              <Menu/>\n            <div id=\"page\">\n              <Route exact path=\"/\" component={About} />\n              <Route path=\"/portfolio\" component={Portfolio} />\n              <Route path=\"/resume\" component={Resume} />\n              <Route path=\"/blog\" component={Blog} />\n              <Route path=\"/contact\" component={Contact} />\n            </div>\n          </SplitPane>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}